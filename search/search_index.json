{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Homepage","text":""},{"location":"#code-annotation-examples","title":"Code Annotation Examples","text":""},{"location":"#codeblocks","title":"Codeblocks","text":"<p>Some <code>code</code> goes here</p>"},{"location":"#plain-codeblock","title":"Plain codeblock","text":"<pre><code>Some code here\ndef myfunction()\n// some comment\n</code></pre>"},{"location":"#code-for-specific-language","title":"Code for specific language","text":"<p>Test</p> test-title.py<pre><code>import tensorflow as tf\ndef whatever():\n</code></pre> <pre><code>import tensorflow as tf\ndef whatever():\n   # do things\n</code></pre>"},{"location":"Usage/commands/","title":"Commands","text":"<p>A comprehensive command reference for the Minecraft Championships (MCT) plugin</p>"},{"location":"Usage/commands/#command-guide","title":"Command Guide","text":"<p>Most, if not all commands are sub-commands of the <code>/mct &lt;sub-command&gt;</code> command.</p>"},{"location":"Usage/commands/#list-and-summary-of-mct-sub-commands","title":"List and summary of /mct sub commands","text":"Command Description <code>/mct game</code> Start, stop, and vote for games <code>/mct event</code> Start, stop, pause, and resume events <code>/mct team</code> Add/remove, join/leave, and modify teams <code>/mct load</code> Load the game state from memory <code>/mct save</code> Save the game state to memory <code>/mct option</code> Toggle options for debugging and testing"},{"location":"Usage/commands/#mct-game","title":"/mct game","text":"<p>Start, stop, and vote for games.</p> <ul> <li><code>/mct game start &lt;game&gt;</code></li> <li>Starts the specified game</li> <li><code>&lt;game&gt;</code> the game to start. Must be a valid game name in the event.</li> <li><code>/mct game stop [true|false]</code></li> <li>This will stop the currently running game (if there is one), and return all players to the beginning. As of the time of writing this, the points for playing the game will be retained.</li> <li><code>[true|false]</code> This is an optional argument (defaults to true). If you provide false, the teleport to the hub will be cancelled. This is a debugging feature, and players will often not be reset properly after a game ends.</li> <li><code>/mct game vote [one or more games]</code></li> <li>Initiates a vote for all participants using the provided games as the voting pool.</li> <li>for example: <code>/mct game vote spleef foot-race mecha</code> will show all players a voting gui with those three games, and no others.</li> </ul>"},{"location":"Usage/commands/#mct-event","title":"/mct event","text":"<p>Start, stop, pause and resume events.</p> <p>Starting an event kicks off an autonomous flow of a set number of games (specified by the command sender) with a 5-minute break in the middle. The flow looks like this:</p> <ul> <li>Waiting period in the hub</li> <li>Voting phase where players vote for the next game (games during an event can't be voted for/played more than once).</li> <li>The voted for game is played through to completion</li> <li>Repeat</li> </ul> <p>After all the games in the event have been played (or there are no more games to be played) the top two winners will be sent to the final round to determine the overall champion. </p> <p>You can pause the flow of the event during the waiting period in the hub. You can't pause the event during any other period.</p> <p>You can stop games manually with the <code>/mct game stop</code> command. This will continue the flow of the event as normal. Note: <code>/mct game stop false</code> has unknown effects on the event flow, and may break the event. More robustness will be added in future updates. </p> <p>When an event is over (either by naturally ending, or stopping manually) the points of the teams and players will be saved in the <code>plugins/MCTManager/gameState.json</code> file. The games that were played during the event will also be saved to that. However, starting a new event will clear the list of saved already-played games. </p> <ul> <li><code>/mct event start [number of games]</code></li> <li>Starts the event</li> <li><code>[number of games]</code> Optional argument to specify the number of games to play in the event. If omitted, defaults to 6 games.</li> <li>You can't start an event while another event is going on</li> <li><code>/mct event stop [confirm]</code></li> <li>Stops the event. This will stop the flow, and no more games will be automatically started by the event. </li> <li><code>[confirm]</code> you must provide this argument for it to stop the event. If you don't provide this argument, you will be asked to confirm the stop.</li> <li><code>/mct event pause</code></li> <li>Pauses the event. The event can only be paused during the waiting period between the end of a game and the voting phase. </li> <li><code>/mct event resume</code></li> <li>Resumes a paused event.</li> </ul>"},{"location":"Usage/commands/#mct-team","title":"/mct team","text":"<ul> <li><code>/mct team add &lt;team&gt; &lt;\"displayname\"&gt; &lt;color&gt;</code></li> <li><code>&lt;team&gt;</code> the internal name of the team. Must match requirements of Minecraft team names. Can only be made up of these characters: <code>-</code>, <code>+</code>, <code>.</code>, <code>_</code>, <code>A-Z</code>, <code>a-z</code>, and <code>0-9</code>.</li> <li><code>&lt;\"displayname\"&gt;</code> the display name of the team. Must be a quoted string.</li> <li><code>&lt;color&gt;</code> the color of the team</li> <li><code>/mct team remove &lt;team&gt;</code></li> <li>Removes the specified team</li> <li><code>&lt;team&gt;</code> the same as above. The internal name of the team, specified during the initial creation of the team.</li> <li><code>/mct team join &lt;team&gt; &lt;player&gt;</code></li> <li>Add the specified player to the specified team</li> <li><code>&lt;team&gt;</code> the internal name of the team. The team must already exist.</li> <li><code>&lt;player&gt;</code> the name of the player to join to the team. Must be an online player.</li> <li><code>/mct team remove &lt;player&gt;</code></li> <li>Remove the specified player from their team. This loses any points the player had.</li> <li><code>&lt;player&gt;</code> the name of the player to remove. Does not have to be an online player, but does have to already be joined to a team.</li> <li>Note: This will delete a participants points, but as of right now doesn't remove those points from the team they used to be on</li> <li><code>/mct team list [true|false]</code></li> <li>Displays the list of the teams, the team scores, the players on those teams, and the player scores.</li> <li><code>[true|false]</code> whether or not to display the teams to all participants. Defaults to false. If you specify true, it will display the team list to all participants.</li> <li><code>/mct team score &lt;add|subtract|set&gt; &lt;player|team&gt; &lt;playerName|teamName&gt; &lt;value&gt;</code></li> <li><code>&lt;add|subtract|set&gt;</code><ul> <li><code>add</code> add the <code>value</code></li> <li><code>subtract</code> subtract the <code>value</code></li> <li><code>set</code> set the score to the <code>value</code></li> </ul> </li> <li><code>&lt;player|team&gt;</code> specify player or team</li> <li><code>&lt;playerName|teamName&gt;</code> If you specified <code>player</code> above, enter the <code>playerName</code> of the player whose score you want to modify. If you specified <code>team</code> above, enter the <code>teamName</code> of the team whose score you want to modify.</li> <li><code>&lt;value&gt;</code> the value you want to <code>add</code>/<code>subtract</code>/<code>set</code>.<ul> <li>Must be an integer.</li> <li>Can be negative for <code>add</code>/<code>subtract</code></li> <li>If you add a negative number it's subtracted, if you subtract a negative number it's added.</li> <li>Must be positive for <code>set</code>.</li> <li>You can't modify a score so that it's less than 0. If you try to subtract a number from a score that would cause it to go negative, the score is simply set to 0.</li> </ul> </li> </ul>"},{"location":"Usage/commands/#mct-load","title":"/mct load","text":""},{"location":"Usage/commands/#mct-save","title":"/mct save","text":""},{"location":"Usage/commands/#mct-option","title":"/mct option","text":""},{"location":"Usage/configuration/","title":"Configuration Files (Config files)","text":"<p>This section describes how to use the various config files for MCTManager.</p>"},{"location":"Usage/configuration/#location","title":"Location","text":"<p>You can find the config files in the <code>&lt;server&gt;/plugins/MCTManager/</code> directory of your server. </p>"},{"location":"Usage/configuration/#files","title":"Files","text":"<ul> <li>gameState.json</li> <li>mechaConfig.json</li> <li>parkourPathwayConfig.json</li> </ul>"},{"location":"Usage/configuration/#gamestatejson","title":"gameState.json","text":"<p>This is where the state of the game is saved. <code>gameState.json</code> keeps track of - What teams exist, their names and colors - Who the participants are and what team they are on - Who the admins are - What games have been played during an event</p>"},{"location":"Usage/configuration/#mechaconfigjson","title":"mechaConfig.json","text":"<p>This is the config file for MECHA. It allows you to configure: - The location of the spawn chests (the chests in the center of the map) - The location of the map chests (the chests throughout the MECHA map) - The spawn chest loot table - The weighted loot tables for the map chests - The stages of the border</p>"},{"location":"Usage/configuration/#example","title":"Example:","text":"<p>This is an example of a <code>mechaConfig.json</code> file (elipses <code>...</code> mean that you can add as many as you want in the list) <pre><code>{\n  \"spawnLootTable\": {\n    \"namespace\": \"mctdatapack\",\n    \"key\": \"mecha/spawn-chest\"\n  },\n  \"weightedMechaLootTables\": [\n    {\n      \"namespace\": \"mctdatapack\",\n      \"key\": \"mecha/better-chest\",\n      \"weight\": 2\n    },\n    ...\n    }\n  ],\n  \"borderStages\": [\n    {\n      \"size\": 180,\n      \"delay\": 90,\n      \"duration\": 25\n    },\n    ...\n  ],\n  \"spawnChestCoords\": [\n    {\n      \"x\": -1.0,\n      \"y\": -45.0,\n      \"z\": 1.0\n    },\n    ...\n  ],\n  \"mapChestCoords\": [\n    {\n      \"x\": -18.0,\n      \"y\": -45.0,\n      \"z\": -15.0\n    },\n    ...\n  ]\n}\n</code></pre></p> <ul> <li><code>\"spawnChestCoords\"</code> is a list of <code>x,y,z</code> coordinates indicating the locations of the spawn chests. </li> <li>Spawn chests will be filled at the start of the game and emptied at the end of the game</li> <li>Spawn chests will be given loot according to the <code>\"spawnLootTable\"</code> specified in the config (see below)</li> <li><code>\"mapChestCoords\"</code> is a list of <code>x,y,z</code> coordinates indication the locations of the map chests. </li> <li>Map chests will be filled at the start of the game and emptied at the end of the game</li> <li>Map chests will be given loot from a random loot table in the <code>\"weightedMechaLootTables\"</code> list (see below)</li> <li><code>\"spawnLootTable\"</code> the loot table for the spawn chests</li> <li><code>\"weightedMechaLootTables\"</code> the loot tables for the map chests</li> <li>a loot table for each chest will be randomly selected from these. The likelyhood of a particular loot table being picked is determined by its weight. Weights can be as low as 1, and must be integers. The lower the weight, the more likely it is to be chosen. Items with identical weights will be equally likely to be chosen. </li> <li><code>\"borderStages\"</code> a list of stages for the world border during the game. </li> <li>The first stage is the initial state.</li> <li><code>\"size\"</code> is the size of the world border in blocks.</li> <li><code>\"delay\"</code> is how many seconds the border will stay the current size before shrinking</li> <li><code>\"duration\"</code> is how many seconds the border will take to shrink to the next size, once it starts shrinking</li> <li>The border will progress through the stages in the list until it reaches the last stage, where it will stay still. </li> </ul>"},{"location":"Usage/configuration/#parkourpathwayconfigjson","title":"parkourPathwayConfig.json","text":"<p>This is the config file for Parkour Pathway. It allows you to configure: - The checkpoints along the parkour map - The world that the map is located in</p> <p>This is an example of a <code>parkourPathwayConfig.json</code> file</p> <pre><code>{\n  \"timeLimit\": 600,\n  \"checkpointCounter\": 120,\n  \"checkpointCounterAlert\": 30,\n  \"checkpoints\": [\n    {\n      \"yValue\": 0,\n      \"min\": {\n        \"x\": 998,\n        \"y\": -1,\n        \"z\": -8\n      },\n      \"max\": {\n        \"x\": 1007,\n        \"y\": 5,\n        \"z\": 8\n      },\n      \"respawn\": {\n        \"x\": 1003,\n        \"y\": 0,\n        \"z\": 0\n      }\n    },\n    ...\n  ],\n  \"world\": \"FT\"\n}\n</code></pre> <ul> <li><code>\"timeLimit\"</code> the duration in seconds of the entire game</li> <li><code>\"checkpointCounter\"</code> the duration in seconds to wait before activating the mercy rule/failsafe. If no players reach a new checkpoint in the <code>checkpointCounter</code> time limit, then the game will end.</li> <li><code>\"checkpointCounterAlert\"</code> this is how many seconds left in the failsafe time (<code>\"checkpointCounter\"</code>) there must be in order for players to be notified. For example, if the <code>\"checkpointCounter\"</code> is <code>60</code> and <code>\"checkpointCounterAlert\"</code> is <code>10</code>, then if no players have reached a new checkpoint for <code>50</code> seconds, they'll be notified they have <code>10</code> seconds left.  </li> <li>this must be less than <code>\"checkpointCounter\"</code>, or problems will occur</li> <li><code>\"checkpoints\"</code> defines a list of checkpoints. </li> <li>The first checkpoint is the initial spawn location when players are teleported in</li> <li>Checkpoints are progressed in order</li> <li>The last checkpoint is the finish line<ul> <li>It might not make sense to have a <code>\"yValue\"</code> field for the finish line. Suffice it to say, this is the easy way. Just set it lower than the player can go.</li> </ul> </li> <li><code>\"yValue\"</code> is the lower limit of the checkpoint. If the player falls below that y height, they'll be teleported back to <code>\"respawn\"</code></li> <li><code>\"min\"</code> and <code>\"max\"</code> are the minimum and maximum corners for the bounding box that defines the detection region for the checkpoint. If a player steps into that bounding box, then they have \"reached\" that checkpoint. <ul> <li>Think of this like the <code>/fill</code> command, where the first set of coordinates is <code>\"min\"</code> and the second set is <code>\"max\"</code></li> </ul> </li> <li><code>\"respawn\"</code> the position of the respawn point<ul> <li>The player will be teleported here if the player falls below the <code>\"yValue\"</code> after reaching this checkpoint</li> </ul> </li> <li><code>\"world\"</code> specifies the name of the world the Parkour Map is in</li> </ul>"},{"location":"contributing/adding-new-game/","title":"Adding a new Game","text":"<p>There are a few things you need to do when adding a new game.</p> <ul> <li>Create a new enum for the game in <code>GameType.java</code> (all upper-case, underscores; in this example, it's <code>GameType.NEW_GAME</code>) </li> <li>Create a new enum value <code>NEW_GAME</code><ul> <li>Give it a <code>title</code> and an <code>id</code> (for this example, it will be <code>NEW_GAME(\"New Game\", \"new-game\")</code>)</li> <li><code>title</code> is the display name</li> <li><code>id</code> must be lowercase with no spaces (only dashes) and only alphanumeric characters (it must match the <code>validIdRegex</code> in the <code>GameType</code> constructor, or an <code>IllegalArgumentException</code> will be thrown)</li> </ul> </li> <li>The Enum for the game is used in various places to identify which game is being played/selected. For example:<ul> <li>This allows the <code>/mct game start new-game</code> command to start your new game</li> <li>This allows the vote sub command to include this game in its list of votable games</li> </ul> </li> <li>Add the <code>GameType.NEW_GAME</code> to the <code>GameManager.java</code></li> <li>add the game to the voting pool in <code>startVote()</code><ul> <li><code>votingPool.add(GameType.NEW_GAME);</code></li> </ul> </li> <li>Create a case in the <code>startGame()</code> method switch statement for the game<ul> <li>You will implement this after you create the game class in the next few steps, leave it empty for now </li> <li>Use the other cases for the other games as an indicator </li> </ul> </li> <li>Add <code>GameType.NEW_GAME</code> to the <code>VoteManager.java</code></li> <li>You need to specify an item to represent your new game in the voting pool. In <code>showVoteGui()</code>, add an <code>ItemStack</code> for your game. Use the others as an example. In this example, we'll use <code>Material.STONE</code> for the material, and call the <code>ItemStack</code> variable <code>newGameItem</code>.<ul> <li>Make sure you add your <code>newGameItem</code> to the <code>votingItems</code> Map, like so: <code>votingItems.put(GameType.NEW_GAME, newGame);</code>.</li> </ul> </li> <li>Add a case to the switch statement in <code>clickVoteInventory()</code> for <code>Material.STONE</code> (or whatever material you used). This is why your material must be unique from the other game materials. Use the other cases as an example. </li> <li>If you haven't already, create a folder under <code>braekpo1nt/mctmanager/games/game/&lt;newgame&gt;</code></li> <li>Create your game class, which must implement <code>org.braekpo1nt.mctmanager.games.game.interfaces.MCTGame</code>. For this example, we'll call it <code>NewGame.java</code></li> <li>Make <code>getType()</code> return <code>GameType.NEW_GAME</code></li> <li>For more details on implementing the <code>MCTGame</code> class and writing the functionality for your game, see the other games as examples. There should also be a general guide written soon.</li> <li>Add your game to the <code>GameManager.java</code></li> <li>Create a field for your game <code>private final NewGame newGame;</code></li> <li>Initialize <code>newGame</code> in <code>GameManager</code>'s constructor. Use the other games as an example. </li> <li>Now is when you implement the case in the switch statement you made for <code>GameType.NEW_GAME</code> in <code>startGame()</code>. <ul> <li>Use the others as an example. </li> <li>Note: Colossal Combat is a special case, don't use that as an example.</li> </ul> </li> <li>Now test and make sure you can </li> <li>run your game with <code>/mct game start new-game</code> (which is made possible with the addition to the <code>VoteSubCommand.java</code> above)</li> <li>vote for your game with the vote system using <code>/mct game vote new-game &lt;...any other games you want in the voting pool...&gt;</code> (made possible by adding it to the <code>VoteManager.java</code>)</li> <li>use your game in an Event (<code>/mct event start &lt;number of games&gt;</code>)</li> </ul>"}]}